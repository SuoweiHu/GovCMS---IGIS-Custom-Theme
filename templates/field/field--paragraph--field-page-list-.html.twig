{#
    /**
     * @file
     * Default theme implementation for a field.
     *
     * To override output, copy the "field.html.twig" from the templates directory
     * to your theme's directory and customize it, just like customizing other
     * Drupal templates such as page.html.twig or node.html.twig.
     *
     * Instead of overriding the theming for all fields, you can also just override
     * theming for a subset of fields using
     * @link themeable Theme hook suggestions. @endlink For example,
     * here are some theme hook suggestions that can be used for a field_foo field
     * on an article node type:
     * - field--node--field-foo--article.html.twig
     * - field--node--field-foo.html.twig
     * - field--node--article.html.twig
     * - field--field-foo.html.twig
     * - field--text-with-summary.html.twig
     * - field.html.twig
     *
     * Available variables:
     * - attributes: HTML attributes for the containing element.
     * - label_hidden: Whether to show the field label or not.
     * - title_attributes: HTML attributes for the title.
     * - label: The label for the field.
     * - multiple: TRUE if a field can contain multiple items.
     * - items: List of all the field items. Each item contains:
     *   - attributes: List of HTML attributes for each item.
     *   - content: The field item's content.
     * - entity_type: The entity type to which the field belongs.
     * - field_name: The name of the field.
     * - field_type: The type of the field.
     * - label_display: The display settings for the label.
     *
     * @see template_preprocess_field()
     *
     * @ingroup themeable
     */
    #}
    {%
      set title_classes = [
        label_display == 'visually_hidden' ? 'visually-hidden',
      ]
    %}

{% for item in items %}
    <div{{ item.attributes.addClass("list-group-item") }}>

        {% set item_title   = item.content["#node"].title.0.value                                 %}
        {% set item_body    = item.content["#node"].body.0.value                                  %}
        {% set item_created = item.content["#node"].uid.entity.name.0.value                       %}
        {% set item_node_id = item.content["#node"].nid.0.value                                   %}
        {% set item_link    = path('entity.node.canonical', {'node': item.content['#node'].id()}) %}

        <div class="list-inline">
            <div class="item-heading mt-3">
                <!-- <a href="{{item_link}}"><h5> {{item_title}} </h5></a> -->
                <h5> {{item_title}} </h5>
            </div>
            <div class="item-creator">
                <strong>Author:</strong> {{item_created}}
            </div>
            <div class="item-body mt-0" >
                <strong>Content:</strong> {{item_body|striptags}}
            </div>
            <a href="{{item_link}}" class="stretched-link"></a>
        </div>
    </div>
{% endfor %}