{#
/**
* @file
* Default theme implementation to display a paragraph.
*
* Available variables:
* - paragraph: Full paragraph entity.
* Only method names starting with "get", "has", or "is" and a few common
* methods such as "id", "label", and "bundle" are available. For example:
* - paragraph.getCreatedTime() will return the paragraph creation timestamp.
* - paragraph.id(): The paragraph ID.
* - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
* - paragraph.getOwnerId(): The user ID of the paragraph author.
* See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
* and methods for the paragraph object.
* - content: All paragraph items. Use {{ content }} to print them all,
* or print a subset such as {{ content.field_example }}. Use
* {{ content|without('field_example') }} to temporarily suppress the printing
* of a given child element.
* - attributes: HTML attributes for the containing element.
* The attributes.class element may contain one or more of the following
* classes:
* - paragraphs: The current template type (also known as a "theming hook").
* - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
* "Image" it would result in "paragraphs--type--image". Note that the machine
* name will often be in a short form of the human readable label.
* - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
* preview would result in: "paragraphs--view-mode--preview", and
* default: "paragraphs--view-mode--default".
* - view_mode: View mode; for example, "preview" or "full".
* - logged_in: Flag for authenticated user status. Will be true when the
* current user is a logged-in member.
* - is_admin: Flag for admin user status. Will be true when the current user
* is an administrator.
*
* @see template_preprocess_paragraph()
*
* @ingroup themeable
*/
#}

{%
    set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
    ]
%}

{# set fid       = content.field_attachment_file[0]["#file"].fid.0.value      #}   {# fid      {{dump(fid)}}                                                    #}
{# set uuid      = content.field_attachment_file[0]["#file"].uuid.0.value     #}   {# uuid     {{dump(uuid)}}                                                   #}
{# set langcode  = content.field_attachment_file[0]["#file"].langcode.0.value #}   {# langcode {{dump(langcode)}}                                               #}
{# set uid       = content.field_attachment_file[0]["#file"].uid.0.value      #}   {# uid      {{dump(uid)}}                                                    #}
{# set filename  = content.field_attachment_file[0]["#file"].filename.0.value #}   {# filename {{dump(filename)}}                                               #}
{# set uri       = content.field_attachment_file[0]["#file"].uri.0.value      #}   {# uri      {{dump(uri)}}                                                    #}
{# set url       = content.field_attachment_file[0]["#file"].uri.0.url        #}   {# url      {{dump(content.field_attachment_file[0]["#file"].uri.0.url)}}    #}
{# set filesize  = content.field_attachment_file[0]["#file"].filesize.0.value #}   {# filesize {{dump(filesize)}}                                               #}
{# set status    = content.field_attachment_file[0]["#file"].status.0.value   #}   {# status   {{dump(status)}}                                                 #}
{# set created   = content.field_attachment_file[0]["#file"].created.0.value  #}   {# created  {{dump(created)}}                                                #}
{# set changed   = content.field_attachment_file[0]["#file"].changed.0.value  #}   {# changed  {{dump(changed)}}                                                #}
{% set filetype  = content.field_attachment_file[0]["#file"].filemime.value   %}

<div {{ attributes.addClass(classes).addClass("file").addClass("file-"~filetype|clean_class) }}>
    {{content}}
</div>
