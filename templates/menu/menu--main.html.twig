{#
/**
 * @file
 * Bootstrap Barrio's override to display a menu.
 *
 * Available variables:
 * - menu_name: The machine name of the menu.
 * - items: A nested list of menu items. Each menu item contains:
 *   - attributes: HTML attributes for the menu item.
 *   - below: The menu item child items.
 *   - title: The menu link title.
 *   - url: The menu link url, instance of \Drupal\Core\Url
 *   - localized_options: Menu link localized options.
 *   - is_expanded: TRUE if the link has visible children within the current
 *     menu tree.
 *   - is_collapsed: TRUE if the link has children within the current menu tree
 *     that are not currently visible.
 *   - in_active_trail: TRUE if the link is in the active trail.
 */
#}
{% import _self as menus %}

{#
  We call a macro which calls itself to render the full tree.
  @see http://twig.sensiolabs.org/doc/tags/macro.html
#}
{{ menus.menu_links(items, attributes, 0) }}

{% macro menu_links(items, attributes, menu_level) %}
  {% import _self as menus %}
  {% if items %}
    {% if menu_level == 0 %}
      <ul{{ attributes.addClass('nav navbar-nav container')|without('id') }}>
    {% elseif menu_level == 1 %}
      <ul class="dropdown-menu link-item-card-container border-0 rounded-0">
    {% else %}
      <ul class="dropdown-menu">
    {% endif %}
    {% for item in items %}
      {%
        set classes = [
          menu_level ? 'dropdown-item' : 'nav-item',
          item.is_expanded ? 'menu-item--expanded',
          item.is_collapsed ? 'menu-item--collapsed',
          item.in_active_trail ? 'active',
          item.below ? 'dropdown',
        ]
      %}
      <li{{ item.attributes.addClass(classes) }}>
        {%
          set link_classes = [
            not menu_level ? 'nav-link',
            item.in_active_trail ? 'active',
            item.below ? 'dropdown-toggle',
            item.url.getOption('attributes').class ? item.url.getOption('attributes').class | join(' '),
            'nav-link-' ~ item.url.toString() | clean_class,
          ]
        %}

        {% if item.below %}
          {{ link(item.title, item.url, {'class': link_classes|merge(["text-uppercase"]), 'data-bs-toggle': 'dropdown', 'aria-expanded': 'false', 'aria-haspopup': 'true' }) }}
          {{ menus.menu_links(item.below, attributes, menu_level + 1) }}
        {% else %}

          {# ----------------------------------------------------------------------------------- #}
          {# If the item is a "first" (0) level menu (menu that can hold drop down items)        #}
          {% if menu_level == 0 %}
            {{ link(item.title, item.url, {'class': link_classes|merge(["text-uppercase"])}) }}
          {% endif %}
          {# ----------------------------------------------------------------------------------- #}


          {# ----------------------------------------------------------------------------------- #}
          {# If the item is a "second" (1) level menu (menu that is inside the first level menu) #}
          {% if menu_level == 1 %}
            <a class="card link-item-card border-0 rounded-0 col" href="{{item.url}}">
                <div class="card-body link-item-card-body ">
                    <h6 class="card-title link-item-card-body-title text-decoration-none">{{item.title}}</h6>
                    <p class="card-text link-item-card-body-text text-wrap">{{item["original_link"].description}}</p>
                </div>
            </a>
          {% endif %}
          {# ----------------------------------------------------------------------------------- #}

        {% endif %}

      </li>
    {% endfor %}
    </ul>
  {% endif %}
{% endmacro %}


<style>





</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    window.addEventListener('scroll', function() {
        var elements_link = document.querySelectorAll('a.nav-link dropdown-toggle.show');
        for (var i = 0; i < elements_link.length; i++) { elements_link[i].classList.remove('show');}
        var elements_cont = document.querySelectorAll('ul.dropdown-menu.link-item-card-container.show');
        for (var i = 0; i < elements_cont.length; i++) { elements_cont[i].classList.remove('show');}
    });
});
</script>
